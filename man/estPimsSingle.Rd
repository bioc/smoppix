% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estPims.R
\name{estPimsSingle}
\alias{estPimsSingle}
\title{A wrapper function for the different probabilistic indices (PIs)}
\usage{
estPimsSingle(
  p,
  pis = c("nn", "allDist", "nnPair", "allDistPair", "edge", "midpoint", "fixedpoint"),
  null = c("background", "CSR"),
  nSims = 100,
  nPointsAll = 10000,
  allowManyGenePairs = FALSE,
  manyPairs = 1e+06,
  verbose = FALSE,
  owins = NULL,
  point,
  ...
)
}
\arguments{
\item{p}{The point pattern}

\item{pis}{the Probabilitstic indices to be estimated}

\item{null}{A character vector, indicating how the null distribution is defined. See details.}

\item{nSims}{The number of Monte-Carlo simulations used to determine the null distribution if null = "CSR}

\item{nPointsAll}{How many points to subsample to calculate overall distance distribution}

\item{allowManyGenePairs}{A boolean, set to true to suppress warning messages for large numbers of gene pairs}

\item{manyPairs}{An integer, what are considered many gene pairs}

\item{verbose}{Should verbose output be printed?}

\item{...}{Additional arguments passed on to the appropriate functions}

\item{points}{A list of points to which the distances are to be calculated}
}
\value{
Data frames with estimated quantities per gene and/or gene pair
}
\description{
A wrapper function for the different probabilistic indices (PIs)
}
\details{
The null distribution used to calculate the PIs. Can be either "background",
in which case the observed distributions of all genes is used. Alternatively,
for null = "CSR", Monte-Carlo simulation under complete spatial randomness is performed within the given window.
For the 'edge', 'midpoint' and 'fixedpoint' probabilistic indices, always CSR is used for the null.

The 'nn' prefix indicates that nearest neighbour distances are being used, whereas 'all' indicates all distances are being used.
The suffix 'Pair' indicates that bivariate probabilistic indices, testing for co- and antilocalization are being used.
'edge' and 'midpoint' calculate the distance to the edge respectively the midpoint of the windows added using the addCell() function.
'fixedpoint' calculates the distances to a supplied list of points.
}
