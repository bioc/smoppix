% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estPims.R
\name{estPims}
\alias{estPims}
\title{Estimate pims on a hyperframe}
\usage{
estPims(
  hypFrame,
  pis = c("nn", "allDist", "nnPair", "allDistPair", "edge", "midpoint", "nnCell",
    "allDistCell", "nnPairCell", "allDistPairCell"),
  null = c("background", "CSR"),
  features = attr(hypFrame, "features"),
  ...
)
}
\arguments{
\item{hypFrame}{the hyperframe}

\item{pis}{The probabilistic indices to be estimated}

\item{null}{A character vector, indicating how the null distribution is
defined. See details.}

\item{features}{A character vector, for which features should the
probabilistic indices be calculated?}

\item{...}{additional arguments, passed on to estPimsSingle}
}
\value{
A list of estimated pims
}
\description{
Estimate pims on a hyperframe
}
\details{
The null distribution used to calculate the PIs. Can be either "background",
in which case the observed distributions of all genes is used. Alternatively,
for null = "CSR", Monte-Carlo simulation under complete spatial randomness
 is performed within the given window.

The 'nn' prefix indicates that nearest neighbour distances are being used,
whereas 'all' indicates all distances are being used.
The suffix 'Pair' indicates that bivariate probabilistic indices,
testing for co- and antilocalization are being used.
'edge' and 'midpoint' calculate the distance to the edge respectively
 the midpoint of the windows added using the addCell() function.
The suffix "Cell" indicates distances are being calculated within cells only.
}
\examples{
data(Yang)
hypYang <- buildHyperFrame(Yang,
  coordVars = c("x", "y"),
  imageVars = c("day", "root", "section")
)
# Fit a subset of features to limit computation time
yangPims <- estPims(hypYang[c(seq_len(5), seq(25, 29)),], pis = "nn",
  features = attr(hypYang, "features")[seq_len(10)])
# Univariate nearest neighbour distances
}
