% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/buildDataFrame.R
\name{buildDataFrame}
\alias{buildDataFrame}
\title{Build a data frame for a single gene and measure to prepare
for mixed model building}
\usage{
buildDataFrame(
  obj,
  gene,
  pi = c("nn", "nnPair", "edge", "midpoint", "nnCell", "nnPairCell")
)
}
\arguments{
\item{obj}{The result of a call to buildWeightFunction()}

\item{gene}{A character string indicating the desired gene or gene pair}

\item{pi}{character string indicating the desired pim as outcome
in the linear mixed model}
}
\value{
A dataframe
}
\description{
Build a data frame for a single gene and measure to prepare
for mixed model building
}
\examples{
data(Yang)
hypYang <- buildHyperFrame(Yang,
    coordVars = c('x', 'y'),
    imageVars = c('day', 'root', 'section')
)
# Fit a subset of features to limit computation time
yangPims <- estPims(hypYang[c(seq_len(5), seq(25, 29)),], pis = 'nn',
features = c('SmVND2', 'SmPINR'))
# First build the weighting function
yangPims <- addWeightFunction(yangPims, designVars = c('day', 'root'))
# Now build the data frame for mixed model analysis
dfUniNN <- buildDataFrame(yangPims, gene = 'SmVND2', pi = 'nn')
# Example analysis with linear mixed model
library(lmerTest)
# Use sum coding for day to maintain interpretability of the intercept
mixedMod <- lmer(pi - 0.5 ~ day + (1 | root),
    weight = weight, data = dfUniNN,
    contrasts = list('day' = 'contr.sum')
)
summary(mixedMod)
# Evidence for aggregation
}
